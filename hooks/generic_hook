#!/usr/bin/env bash

function debug() {
    [ -z "$GGHF_DEBUG" ] && return
    printf "\033[1;33m%s %s\033[0m\n" ">>> gghf_debug:" "$*"
}

function strtobool() {
    echo "$1" | grep "[Tt]rue" > /dev/null && return 0
    echo "$1" | grep "[Ff]alse" > /dev/null && return 1
    return 1
}

# @description Run a hook
# @arg $1 the hook path
# @arg $2 the hook type
# @arg $@ the hook args
function run_hook() {
    _hook_path=$1 && shift
    _hook_type=$1 && shift
    debug "Running $_hook_type hook ${_hook_path}"
    "$_hook_path" "$@" < /dev/stdin
}

script_name=$(basename "$0")

debug "running hook '${script_name}'"
debug "GIT_DIR=${GIT_DIR}"
debug "GIT_WORK_TREE=${GIT_WORK_TREE}"

if [ -n "$GGHF_TEST_CONF" ]; then
    gghf_hooksPath="$(git config --file "$GGHF_TEST_CONF" gghf.hooksPath)"
    gghf_reverse="$(git config --file "$GGHF_TEST_CONF" gghf.reverse)"
    gghf_mode="$(git config --file "$GGHF_TEST_CONF" gghf.mode)"
else
    gghf_hooksPath="$(git config gghf.hooksPath)"
    gghf_reverse="$(git config gghf.reverse)"
    gghf_mode="$(git config gghf.mode)"
fi

[ -z "$gghf_hooksPath" ] && gghf_hooksPath="${XDG_CONFIG_HOME:-~/.config}/git/hooks"
[ -z "$gghf_mode" ] && gghf_mode="exclusive"
[ -z "$gghf_reverse" ] && gghf_reverse=false # true is 0, false is 1
gghf_reverse=$(strtobool "$gghf_reverse") # convert string to bool (0/1)

# Setting global and local hooks paths
[ -n "${gghf_hooksPath}" ] && global_hook_path="${gghf_hooksPath}/${script_name}"
if [ -n "$GIT_DIR" ]; then
    local_hook_path="$GIT_DIR/hooks/${script_name}"
else
    local_hook_path="$(pwd)/.git/hooks/${script_name}"
fi

debug "global_hook_path=${global_hook_path}"
debug "local_hook_path=${local_hook_path}"

if [ "$gghf_mode" = "exclusive" ]; then
    if [ "$gghf_reverse" -eq 0 ]; then
        [ -x "${global_hook_path}" ] && { run_hook "${global_hook_path}" "$@"; exit $?; }
        [ -x "${local_hook_path}" ] && { run_hook "${local_hook_path}" "$@"; exit $?; }
    elif [ "$gghf_reverse" -eq 1 ]; then
        [ -x "${local_hook_path}" ] && { run_hook "${local_hook_path}" "$@"; exit $?; }
        [ -x "${global_hook_path}" ] && { run_hook "${global_hook_path}" "$@"; exit $?; }
    fi
elif [ "$gghf_mode" = "chained" ]; then
    if [ "$gghf_reverse" -eq 0 ]; then
        [ -x "${local_hook_path}" ] && { run_hook "${local_hook_path}" "$@" || exit $?; }
        [ -x "${global_hook_path}" ] && { run_hook "${global_hook_path}" "$@" || exit $?; }
        exit 0
    elif [ "$gghf_reverse" -eq 1 ]; then
        [ -x "${global_hook_path}" ] && { run_hook "${global_hook_path}" "$@" || exit $?; }
        [ -x "${local_hook_path}" ] && { run_hook "${local_hook_path}" "$@" || exit $?; }
        exit 0
    fi
else
    # A different mode fails the hook
    exit 1
fi

exit 0
